type Movement {
  id: ID! @unique
  name: String! @unique
  sets: [Set!]!
}

type User {
  id: ID! @unique
  username: String! @unique
  email: String! @unique
  password: String!
  logs: [Log!]! @relation(name:"UserLogs", onDelete: CASCADE)
  sets: [Set!]! @relation(name:"UserSets", onDelete: CASCADE)
}

type Log {
  id: ID! @unique
  created_at: DateTime!
  sets: [Set!]! @relation(name: "SetsOnLog" onDelete: CASCADE)
  user: User! @relation(name:"UserLogs", onDelete: SET_NULL)
}

type Set {
  id: ID! @unique
  created_at: DateTime!
  movement: Movement!
  reps: Int!
  weight: Float!
  unit: String!
  user: User! @relation(name:"UserSets", onDelete: SET_NULL)
  log: Log! @relation(name: "SetsOnLog", onDelete: SET_NULL)
}
